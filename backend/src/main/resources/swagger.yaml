openapi: 3.0.0
info:
  title: All endpoints management
  description: Endpoints para gestionar los requests
  version: 1.0.0
paths:
  /order/all:
    get:
      summary: Obtener todos los pedidos
      operationId: allpedidos
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/definitions/Pedido'
  /order/get/pedidos/{idPedido}:
    get:
      summary: Buscar pedido por ID
      operationId: findById
      parameters:
        - name: idPedido
          in: path
          description: ID del pedido a buscar
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/definitions/Pedido'
  /order:
    post:
      summary: Agregar un nuevo pedido
      operationId: postPedidos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/definitions/Pedido'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/definitions/Pedido'
  /order/delete/{idPedido}:
    delete:
      summary: Borrar un pedido por ID
      operationId: borrarPedido
      parameters:
        - name: idPedido
          in: path
          description: ID del pedido a borrar
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
  /order/addRestaurant/{idRestaurante}/{idPedido}:
    put:
      summary: Agregar un restaurante a un pedido
      operationId: agregarARestaurante
      parameters:
        - name: idRestaurante
          in: path
          description: ID del restaurante
          required: true
          schema:
            type: integer
        - name: idPedido
          in: path
          description: ID del pedido
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
  /order/addDelivery/{idRepartidor}/{idPedido}:
    put:
      summary: Agregar un repartidor a un pedido
      operationId: agregarARepartidor
      parameters:
        - name: idRepartidor
          in: path
          description: ID del repartidor
          required: true
          schema:
            type: integer
        - name: idPedido
          in: path
          description: ID del pedido
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
  components:
    schemas:
      Pedido:
        type: object
        properties:
          idPedido:
            type: integer
          fecha:
            type: string
          
            get:
        summary: "Obtener todos los repartidores"
        produces:
          - application/json
        responses:
          200:
            description: "Lista de todos los repartidores"
            schema:
              type: "array"
              items:
                $ref: "#/definitions/Repartidor"
  /delivery/get/{idRepartidor}:
    get:
      summary: "Obtener repartidor por ID"
      produces:
        - application/json
      parameters:
        - name: idRepartidor
          in: path
          description: "ID del repartidor a buscar"
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: "Repartidor encontrado"
          schema:
            $ref: "#/definitions/Repartidor"
        404:
          description: "Repartidor no encontrado"
  /delivery:
    post:
      summary: "Agregar un nuevo repartidor"
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: "Repartidor a agregar"
          required: true
          schema:
            $ref: "#/definitions/Repartidor"
      responses:
        200:
          description: "Repartidor agregado exitosamente"
          schema:
            $ref: "#/definitions/Repartidor"
  /delivery/delete/{idRepartidor}:
    delete:
      summary: "Borrar un repartidor por ID"
      produces:
        - application/json
      parameters:
        - name: idRepartidor
          in: path
          description: "ID del repartidor a borrar"
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: "Repartidor borrado exitosamente"
        404:
          description: "Repartidor no encontrado"
  /restaurant/get/all:
     get:
      summary: "Obtener todos los restaurantes"
      produces:
        - application/json
      responses:
        200:
          description: "Lista de todos los restaurantes"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Restaurante"
  /restaurant/get/{idRestaurante}:
    get:
      summary: "Obtener restaurante por ID"
      produces:
        - application/json
      parameters:
        - name: idRestaurante
          in: path
          description: "ID del restaurante a buscar"
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: "Restaurante encontrado"
          schema:
            $ref: "#/definitions/Restaurante"
        404:
          description: "Restaurante no encontrado"
  /restaurant:
    post:
      summary: "Agregar un nuevo restaurante"
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: "Restaurante a agregar"
          required: true
          schema:
            $ref: "#/definitions/Restaurante"
      responses:
        200:
          description: "Restaurante agregado exitosamente"
          schema:
            $ref: "#/definitions/Restaurante"
  /restaurant/delete/{idRestaurante}:
    delete:
      summary: "Borrar un restaurante por ID"
      produces:
        - application/json
      parameters:
        - name: idRestaurante
          in: path
          description: "ID del restaurante a borrar"
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: "Restaurante borrado exitosamente"
        404:
          description: "Restaurante no encontrado"
          
    /user/all:
    get:
      summary: "Obtener todos los usuarios"
      produces:
        - application/json
      responses:
        200:
          description: "Lista de todos los usuarios"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Usuario"
  /user/get/{idUsuario}:
    get:
      summary: "Obtener usuario por ID"
      produces:
        - application/json
      parameters:
        - name: idUsuario
          in: path
          description: "ID del usuario a buscar"
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: "Usuario encontrado"
          schema:
            $ref: "#/definitions/Usuario"
        404:
          description: "Usuario no encontrado"
  /user:
    post:
      summary: "Agregar un nuevo usuario"
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: "Usuario a agregar"
          required: true
          schema:
            $ref: "#/definitions/Usuario"
      responses:
        200:
          description: "Usuario agregado exitosamente"
          schema:
            $ref: "#/definitions/Usuario"
  /user/delete/{idUsuario}:
    delete:
      summary: "Borrar un usuario por ID"
      produces:
        - application/json
      parameters:
        - name: idUsuario
          in: path
          description: "ID del usuario a borrar"
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: "Usuario borrado exitosamente"
        404:
          description: "Usuario no encontrado"
  /user/addOrder/{idUsuario}/{idPedido}:
    put:
      summary: "Agregar un pedido a un usuario"
      produces:
        - application/json
      parameters:
        - name: idUsuario
          in: path
          description: "ID del usuario"
          required: true
          type: integer
          format: int64
        - name: idPedido
          in: path
          description: "ID del pedido a agregar"
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: "Pedido agregado al usuario exitosamente"
        404:
          description: "Usuario o pedido no encontrado"
  /user/{idUsuario}:
    put:
      summary: "Modificar un usuario por ID"
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: idUsuario
          in: path
          description: "ID del usuario a modificar"
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: "Nuevo detalle del usuario"
          required: true
          schema:
            $ref: "#/definitions/Usuario"
      responses:
        200:
          description: "Usuario modificado exitosamente"
          schema:
            $ref: "#/definitions/Usuario"
        404:
          description: "Usuario no encontrado"
  /auth/login:
    post:
      summary: "Iniciar sesión"
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: "Credenciales de inicio de sesión"
          required: true
          schema:
            $ref: "#/definitions/Login"
      responses:
        200:
          description: "Inicio de sesión exitoso"
          schema:
            $ref: "#/definitions/AuthResponse"
        401:
          description: "Credenciales inválidas"
  /auth/register:
    post:
      summary: "Registrar nuevo usuario"
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: "Datos de registro de usuario"
          required: true
          schema:
            $ref: "#/definitions/Register"
      responses:
        200:
          description: "Registro exitoso"
          schema:
            $ref: "#/definitions/AuthResponse"
          
definitions:
  Pedido:
      type: object
      properties:
        idPedido:
          type: integer
        fecha:
          type: string
  Restaurante:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      nombre:
        type: "string"
      direccion:
        type: "string"
  Repartidor:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      nombre:
        type: "string"
      vehiculo:
        type: "string"
      direccion:
        type: "string"
  Usuario:
    type: "object"
    properties:
      idUsuario:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      nombre:
        type: "string"
      apellido:
        type: "string"
      direccion:
        type: "string"
      email:
        type: "string"
      esAdmin:
        type: "boolean"
  Login:
    type: "object"
    properties:
      username:
        type: "string"
      password:
        type: "string"
  Register:
    type: "object"
    properties:
      username:
        type: "string"
      password:
        type: "string"
      email:
        type: "string"
  AuthResponse:
    type: "object"
    properties:
      token:
        type: "string"
